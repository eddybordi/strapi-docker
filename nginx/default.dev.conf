user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    server_tokens off;

    #gzip  on;

    #include /etc/nginx/conf.d/*.conf;

    server {
        listen 1337;
        server_name localhost;

        location / {
            # proxy_pass_header Server;
            # proxy_set_header X-Scheme $scheme;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;

            resolver 127.0.0.11;
            set $api "http://api:1337";
            proxy_pass $api;
            proxy_intercept_errors on;

            proxy_redirect off;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # auth_basic "Restricted Content";
            # auth_basic_user_file /etc/nginx/.htpasswd;
        }

        location /admin {
            # proxy_pass_header Server;
            # proxy_set_header X-Scheme $scheme;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;

            resolver 127.0.0.11;
            set $api "http://api:1337";
            proxy_pass $api;
            proxy_intercept_errors on;

            proxy_redirect off;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # auth_basic "Restricted Content";
            # auth_basic_user_file /etc/nginx/.htpasswd;
        }

        location /favicon.ico {
            return 404;
        }
    }

    # server {
    #     listen 1338;
    #     server_name localhost;

    #     root /usr/share/nginx/html/app;
    #     index index.html;

    #     location / {
    #         try_files $uri $uri/ @rewrites;

    #         # auth_basic "Restricted Content";
    #         # auth_basic_user_file /etc/nginx/.htpasswd;
    #     }

    #     location /blog {
    #         # Do nothing. nginx will serve files as usual.
    #     }

    #     location @rewrites {
    #         rewrite ^(.+)$ /index.html last;
    #     }

    #     location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
    #         # Some basic cache-control for static files to be sent to the browser
    #         expires max;
    #         add_header Pragma public;
    #         add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    #     }

    # }

    # server {
    #     listen 1338;
    #     server_name localhost;

    #     location / {
    #         # proxy_pass_header Server;
    #         # proxy_set_header X-Scheme $scheme;

    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header Host $http_host;
    #         proxy_set_header X-NginX-Proxy true;

    #         resolver 127.0.0.11;
    #         set $app "http://app:3000";
    #         proxy_pass $app;
    #         proxy_intercept_errors on;

    #         proxy_redirect off;
            
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection "upgrade";

    #         # auth_basic "Restricted Content";
    #         # auth_basic_user_file /etc/nginx/.htpasswd;
    #     }

    #     location /favicon.ico {
    #         return 404;
    #     }
    # }
}
